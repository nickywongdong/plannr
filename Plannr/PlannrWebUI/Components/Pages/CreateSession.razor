@page "/create-session"

@inject IHttpClientFactory ClientFactory
@inject ILogger<CreateSession> Logger
@inject NavigationManager NavigationManager

@using System.Text.Json

<h1>Generate a Session Link</h1>

<button @onclick="RequestSessionLink">Create Session</button>
@if (showLoading)
{
    <p>Session Link Loading...</p>
}
@if (sessionLink is not null)
{
    <p>Generated Session: <a href="@(baseUrl)session/@sessionLink.Id">@(baseUrl)session/@sessionLink.Id</a></p>
}

@code {
    private string? baseUrl;
    private bool showLoading = false;
    private UniqueSession? sessionLink = null;

    protected override void OnInitialized()
    {
        baseUrl = NavigationManager.BaseUri;
    }

    private async Task RequestSessionLink()
    {
        showLoading = true;

        var apiUrl = "https://localhost:7018/api/uniquesessions";
        Logger.LogInformation("Requesting Session Link at {apiUrl}", apiUrl);
        var client = ClientFactory.CreateClient();
        var response = await client.PostAsJsonAsync(apiUrl, new object());

        if (response.IsSuccessStatusCode)
        {
            sessionLink = await response.Content.ReadFromJsonAsync<UniqueSession>();
            Logger.LogInformation("Created unique session with id: {id}", sessionLink?.Id.ToString());
        }
        else
        {
            var statusCode = response.StatusCode;
            Logger.LogError("Non Successful Result: {statusCode}", statusCode);
        }

        showLoading = false;
    }

}
